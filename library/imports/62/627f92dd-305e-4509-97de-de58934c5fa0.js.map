{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","game","default","serializable","getPlayerDistance","playerPos","player","getPosition","dist","pDistance","node","position","onPicked","spawnNewStar","destroy","gainScore","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;AAELC,gBAAY;AACR;AACAC,oBAAY,CAFJ;AAGR;AACAC,cAAM;AACFC,qBAAS,IADP;AAEFC,0BAAc;AAFZ;AAJE,KAFP;;AAYLC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKJ,IAAL,CAAUK,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAOb,GAAGc,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCN,SAAjC,CAAX;AACA,eAAOG,IAAP;AACH,KAlBI;;AAoBLI,cAAU,oBAAW;AACjB;AACA,aAAKX,IAAL,CAAUY,YAAV;AACA;AACA,aAAKH,IAAL,CAAUI,OAAV;AACA;AACA,aAAKb,IAAL,CAAUc,SAAV;AACH,KA3BI;AA4BJC,YAAQ,gBAASC,EAAT,EAAa;AAClB;AACA,YAAI,KAAKb,iBAAL,KAA2B,KAAKJ,UAApC,EAAgD;AAC5C;AACA,iBAAKY,QAAL;AACA;AACH;AACD;AACA,YAAIM,eAAe,IAAI,KAAKjB,IAAL,CAAUkB,KAAV,GAAgB,KAAKlB,IAAL,CAAUmB,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKX,IAAL,CAAUY,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACF;AAvCG,CAAT","file":"star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n        pickRadius: 0,\r\n        // 暂存 Game 对象的引用\r\n        game: {\r\n            default: null,\r\n            serializable: false\r\n        }\r\n    },\r\n\r\n    getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = cc.pDistance(this.node.position, playerPos);\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n        // 调用 Game 脚本的得分方法\r\n        this.game.gainScore();\r\n    },\r\n     update :function(dt) {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        // 根据 Game 脚本中的计时器更新星星的透明度\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n     },\r\n});\r\n"]}